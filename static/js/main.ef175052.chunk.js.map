{"version":3,"sources":["config.js","helpers/RemiSheet.js","components/RemiList.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","discoveryDocs","spreadsheetId","load","callback","window","gapi","client","sheets","spreadsheets","values","get","config","range","then","response","remi","result","map","rem","org","name","contact","timings","status","remarks","verified_by","error","columns","property","header","Text","size","RemiList","state","initClient","init","onLoad","data","JSON","parse","stringify","setState","console","log","this","DataTable","border","background","body","margin","resizeable","sortable","React","Component","theme","global","font","family","height","tabs","AppBar","props","Box","tag","direction","align","justify","pad","left","right","vertical","elevation","style","zIndex","App","Grommet","full","ResponsiveContext","Consumer","fill","Heading","level","Tabs","Tab","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef175052.chunk.js","sourcesContent":["export default {\r\n  apiKey: \"AIzaSyCAp-t_WKWx0sfpOM5_-5yeC9g-ZcrkWcI\",\r\n  discoveryDocs: [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\r\n  //spreadsheetId: \"1HB8naiDLds8NBFkVNw9ti6X_Q4Ef-wWJHmCeJqSNvlA\"\r\n  spreadsheetId: \"13EFowc_DLa9c9D4OeGK2X7bdQFPtVmfQf1EHpUmBM5w\"\r\n};","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Remedesivir!A3:G\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              org: rem[0],\r\n              name: rem[1],\r\n              contact: rem[2],\r\n              timings: rem[3],\r\n              status: rem[4],\r\n              remarks: rem[5],\r\n              verified_by: rem[6]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"test-msg\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/RemiSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"name\",\r\n    header: <Text>Name</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"timings\",\r\n    header: <Text>Time</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass RemiList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        org: \"None\",\r\n        name: \"None\",\r\n        contact: \"None\",\r\n        timings: \"None\",\r\n        status: \"None\",\r\n        remarks: \"None\",\r\n        verified_by: \"None\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RemiList;\r\n","import React from \"react\";\nimport { Box, Heading, Grommet, Menu, ResponsiveContext, Tab, Tabs } from \"grommet\";\nimport RemiList from \"./components/RemiList\";\n\nconst theme = {\n  global: {\n    font: {\n      family: \"Roboto\",\n      size: \"18px\",\n      height: \"20px\",\n    },\n    tabs: {\n\n    }\n  },\n};\n\nconst AppBar = (props) => (\n  <Box\n    tag=\"header\"\n    direction=\"row\"\n    align=\"center\"\n    justify=\"between\"\n    background=\"brand\"\n    pad={{ left: \"medium\", right: \"small\", vertical: \"small\" }}\n    elevation=\"medium\"\n    style={{ zIndex: \"1\" }}\n    {...props}\n  />\n);\n\nfunction App() {\n  return (\n    <Grommet theme={theme} full>\n      <ResponsiveContext.Consumer>\n        {() => (\n          <Box fill>\n            <AppBar>\n              <Heading level=\"3\" margin=\"none\">\n                Gujarat Fights Corona 2.0\n              </Heading>\n            </AppBar>\n            <Box direction=\"row\" pad=\"medium\">\n              <Tabs>\n                <Tab title=\"Remedesivir\">\n                  <Box pad=\"medium\"><RemiList /></Box>\n                </Tab>\n                <Tab title=\"Medical Store\">\n                  <Box pad=\"medium\">Work In Progress!</Box>\n                </Tab>\n                <Tab title=\"Doctor On Call\">\n                  <Box pad=\"medium\">Work In Progress!</Box>\n                </Tab>\n                <Tab title=\"Emergency Number\">\n                  <Box pad=\"medium\">Work In Progress!</Box>\n                </Tab>\n                <Tab title=\"Websites\">\n                  <Box pad=\"medium\">Work In Progress!</Box>\n                </Tab>\n                <Tab title=\"Food\">\n                  <Box pad=\"medium\">Work In Progress!</Box>\n                </Tab>\n                <Tab title=\"Plasma\">\n                  <Box pad=\"medium\">Work In Progress!</Box>\n                </Tab>\n                <Tab title=\"Tocilizumab\">\n                  <Box pad=\"medium\">Work In Progress!</Box>\n                </Tab>                \n              </Tabs>\n            </Box>\n          </Box>\n        )}\n      </ResponsiveContext.Consumer>\n    </Grommet>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}