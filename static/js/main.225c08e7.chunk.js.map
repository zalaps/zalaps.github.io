{"version":3,"sources":["config.js","helpers/RemiSheet.js","components/RemiList.js","helpers/MedicalSheet.js","components/MedicalList.js","helpers/DoctorSheet.js","components/DoctorList.js","helpers/EmergencySheet.js","components/EmergencyList.js","helpers/WebsiteSheet.js","components/WebsiteList.js","helpers/OxygenSheet.js","components/OxygenList.js","helpers/FoodSheet.js","components/FoodList.js","helpers/PlasmaSheet.js","components/PlasmaSheet.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","discoveryDocs","spreadsheetId","load","callback","window","gapi","client","sheets","spreadsheets","values","get","config","range","then","response","remi","result","map","rem","org","name","contact","timings","status","remarks","verified_by","error","columns","property","header","Text","size","RemiList","state","initClient","init","onLoad","data","JSON","parse","stringify","setState","console","log","this","DataTable","border","background","body","margin","resizeable","sortable","React","Component","storename","city","area","areacover","MedicalList","doctor","location","service","time","DoctorList","EmergencyList","website","purpose","details","render","datum","Anchor","href","label","WebsiteList","OxygenList","charges","ld","person","foodfor","conditions","FoodList","platform","PlasmaList","theme","global","font","family","height","tabs","AppBar","props","Box","tag","direction","align","justify","pad","left","right","vertical","elevation","style","zIndex","App","Grommet","full","ResponsiveContext","Consumer","fill","Heading","level","Tabs","Tab","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.225c08e7.chunk.js","sourcesContent":["export default {\r\n  apiKey: \"AIzaSyCAp-t_WKWx0sfpOM5_-5yeC9g-ZcrkWcI\",\r\n  discoveryDocs: [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"],\r\n  //spreadsheetId: \"1HB8naiDLds8NBFkVNw9ti6X_Q4Ef-wWJHmCeJqSNvlA\"\r\n  spreadsheetId: \"13EFowc_DLa9c9D4OeGK2X7bdQFPtVmfQf1EHpUmBM5w\"\r\n};","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Remedesivir!A4:G\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              org: rem[0],\r\n              name: rem[1],\r\n              contact: rem[2],\r\n              timings: rem[3],\r\n              status: rem[4],\r\n              remarks: rem[5],\r\n              verified_by: rem[6]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Remedesivir Supplier Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/RemiSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"name\",\r\n    header: <Text>Name</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"timings\",\r\n    header: <Text>Time</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass RemiList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        org: \"fetching...\",\r\n        name: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        timings: \"fetching...\",\r\n        status: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RemiList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Medical Store!A3:G\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              storename: rem[0],\r\n              city: rem[1],\r\n              area: rem[2],\r\n              contact: rem[3],\r\n              areacover: rem[4],\r\n              remarks: rem[5],\r\n              verified_by: rem[6]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Medical Store Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/MedicalSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"storename\",\r\n    header: <Text>Medical Store</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"area\",\r\n    header: <Text>Area</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"areacover\",\r\n    header: <Text>Area Covered</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass MedicalList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        storename: \"fetching...\",\r\n        city: \"fetching...\",\r\n        area: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        areacover: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedicalList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Doctor on Call!A3:G\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              doctor: rem[0],\r\n              location: rem[1],\r\n              contact: rem[2],\r\n              service: rem[3],\r\n              time: rem[4],\r\n              verified_by: rem[6]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Doctor Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/DoctorSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"doctor\",\r\n    header: <Text>Doctor Name</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"location\",\r\n    header: <Text>Location</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"service\",\r\n    header: <Text>Services</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"time\",\r\n    header: <Text>Time</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass DoctorList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        doctor: \"fetching...\",\r\n        location: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        service: \"fetching...\",\r\n        time: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: \"accent-1\",\r\n          body: [\"light\", \"light-3\"],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoctorList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Emergency Number!A3:F\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              org: rem[0],\r\n              name: rem[1],\r\n              contact: rem[2],\r\n              status: rem[3],\r\n              verified_by: rem[4]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Emergency Contact Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/EmergencySheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"name\",\r\n    header: <Text>Name</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass EmergencyList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        org: \"fetching...\",\r\n        name: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        status: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmergencyList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Websites for COVID19!A3:E\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              city: rem[0],\r\n              website: rem[1],\r\n              purpose: rem[2],\r\n              details: rem[3],\r\n              verified_by: rem[4]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Websites for COVID 19 Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/WebsiteSheet\";\r\nimport { DataTable, Anchor, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"website\",\r\n    header: <Text>Website</Text>,\r\n    render: datum => (\r\n      <Anchor href={datum.website} label=\"Tap Here\" />\r\n    ),\r\n  },\r\n  {\r\n    property: \"purpose\",\r\n    header: <Text>Purpose</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"details\",\r\n    header: <Text>Details</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass WebsiteList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        city: \"fetching...\",\r\n        website: \"fetching...\",\r\n        purpose: \"fetching...\",\r\n        details: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default WebsiteList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Oxygen!A3:G\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              org: rem[0],\r\n              name: rem[1],\r\n              contact: rem[2],\r\n              timings: rem[3],\r\n              status: rem[4],\r\n              remarks: rem[5],\r\n              verified_by: rem[6]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Oxygen Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/OxygenSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"name\",\r\n    header: <Text>Name</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"timings\",\r\n    header: <Text>Timings</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass OxygenList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        org: \"fetching...\",\r\n        name: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        timings: \"fetching...\",\r\n        status: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default OxygenList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Food For Covid Patients!A3:K\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              city: rem[0],\r\n              area: rem[1],\r\n              org: rem[2],\r\n              charges: rem[3],\r\n              ld: rem[4],\r\n              person: rem[5],\r\n              contact: rem[6],\r\n              foodfor: rem[7],\r\n              conditions: rem[8],\r\n              verified_by: rem[10]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Food Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/FoodSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"area\",\r\n    header: <Text>Area Covered</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"charges\",\r\n    header: <Text>Charges</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"ld\",\r\n    header: <Text>Lunch/Dinner</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"person\",\r\n    header: <Text>Contact Person</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact Number</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"foodfor\",\r\n    header: <Text>Food For?</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"conditions\",\r\n    header: <Text>Conditions</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass FoodList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        city: \"fetching...\",\r\n        area: \"fetching...\",\r\n        org: \"fetching...\",\r\n        charges: \"fetching...\",\r\n        ld: \"fetching...\",\r\n        person: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        foodfor: \"fetching...\",\r\n        conditions: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FoodList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Plasma Support!A3:G\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              platform: rem[0],\r\n              person: rem[1],\r\n              contact: rem[2],\r\n              remarks: rem[3],\r\n              verified_by: rem[5]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Plasma Support Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/PlasmaSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"platform\",\r\n    header: <Text>Platform</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"person\",\r\n    header: <Text>Contact Person</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass PlasmaList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        platform: \"fetching...\",\r\n        person: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlasmaList;\r\n","import React from \"react\";\nimport { Box, Heading, Grommet, ResponsiveContext, Tab, Tabs } from \"grommet\";\nimport RemiList from \"./components/RemiList\";\nimport MedicalList from \"./components/MedicalList\";\nimport DoctorList from \"./components/DoctorList\";\nimport EmergencyList from \"./components/EmergencyList\";\nimport WebsiteList from \"./components/WebsiteList\";\nimport OxygenList from \"./components/OxygenList\";\nimport FoodList from \"./components/FoodList\";\nimport PlasmaList from \"./components/PlasmaSheet\";\n//import TociliList from \"./components/TociliList\";\n\nconst theme = {\n  global: {\n    font: {\n      family: \"Roboto\",\n      size: \"18px\",\n      height: \"20px\",\n    },\n    tabs: {\n\n    }\n  },\n};\n\nconst AppBar = (props) => (\n  <Box\n    tag=\"header\"\n    direction=\"row\"\n    align=\"center\"\n    justify=\"between\"\n    background=\"brand\"\n    pad={{ left: \"medium\", right: \"small\", vertical: \"small\" }}\n    elevation=\"medium\"\n    style={{ zIndex: \"1\" }}\n    {...props}\n  />\n);\n\nfunction App() {\n  return (\n    <Grommet theme={theme} full>\n      <ResponsiveContext.Consumer>\n        {() => (\n          <Box fill>\n            <AppBar>\n              <Heading level=\"3\" margin=\"none\">\n                Gujarat Covid Support\n              </Heading>\n            </AppBar>\n            <Box direction=\"row\" pad=\"medium\">\n              <Tabs>\n                <Tab title=\"Remedesivir\">\n                  <Box pad=\"medium\"><RemiList /></Box>\n                </Tab>\n                <Tab title=\"Medical Store\">\n                  <Box pad=\"medium\"><MedicalList /></Box>\n                </Tab>\n                <Tab title=\"Doctor On Call\">\n                  <Box pad=\"medium\"><DoctorList /></Box>\n                </Tab>\n                <Tab title=\"Emergency Number\">\n                  <Box pad=\"medium\"><EmergencyList /></Box>\n                </Tab>\n                <Tab title=\"Websites\">\n                  <Box pad=\"medium\"><WebsiteList /></Box>\n                </Tab>\n                <Tab title=\"Oxygen\">\n                  <Box pad=\"medium\"><OxygenList /></Box>\n                </Tab>\n                <Tab title=\"Food For Patients\">\n                  <Box pad=\"medium\"><FoodList /></Box>\n                </Tab>\n                <Tab title=\"Plasma Support\">\n                  <Box pad=\"medium\"><PlasmaList /></Box>\n                </Tab>\n                {/* <Tab title=\"Tocilizumab\">\n                  <Box pad=\"medium\"><TociliList /></Box>\n                </Tab>                 */}\n              </Tabs>\n            </Box>\n          </Box>\n        )}\n      </ResponsiveContext.Consumer>\n    </Grommet>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}