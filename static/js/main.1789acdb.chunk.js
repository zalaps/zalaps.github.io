(this["webpackJsonpgfc-app"]=this["webpackJsonpgfc-app"]||[]).push([[0],{69:function(e,t,r){"use strict";r.r(t);var i=r(0),n=r.n(i),a=r(24),c=r.n(a),s=r(92),o=r(87),l=r(71),d=r(88),h=r(93),p=r(95),u=r(96),j=r(9),f=r(10),b=r(12),g=r(11),m={apiKey:"AIzaSyCAp-t_WKWx0sfpOM5_-5yeC9g-ZcrkWcI",spreadsheetId:"1ZyrYsowjk6PdC9N5yKBxMslI7FypoeIqDvlAYrqprL8",discoveryDocs:["https://sheets.googleapis.com/$discovery/rest?version=v4"]};function y(e){window.gapi.client.load("sheets","v4",(function(){window.gapi.client.sheets.spreadsheets.values.get({spreadsheetId:m.spreadsheetId,range:"Remedesivir!A4:G"}).then((function(t){var r=t.result.values.map((function(e){return{org:e[0],name:e[1],contact:e[2],timings:e[3],status:e[4],remarks:e[5],verified_by:e[6]}}))||[];e({remi:r})}),(function(t){e(!1,t.result.error,"Error in fetching Remedesivir Supplier Data.")}))}))}var v=r(89),O=r(2),x=[{property:"org",header:Object(O.jsx)(h.a,{children:"Organization"}),size:"small"},{property:"name",header:Object(O.jsx)(h.a,{children:"Name"})},{property:"contact",header:Object(O.jsx)(h.a,{children:"Contact"})},{property:"timings",header:Object(O.jsx)(h.a,{children:"Time"})},{property:"status",header:Object(O.jsx)(h.a,{children:"Status"}),size:"small"},{property:"remarks",header:Object(O.jsx)(h.a,{children:"Remarks"}),size:"small"},{property:"verified_by",header:Object(O.jsx)(h.a,{children:"Verified By"})}],w=function(e){Object(b.a)(r,e);var t=Object(g.a)(r);function r(){var e;Object(j.a)(this,r);for(var i=arguments.length,n=new Array(i),a=0;a<i;a++)n[a]=arguments[a];return(e=t.call.apply(t,[this].concat(n))).state={remi:[{org:"fetching...",name:"fetching...",contact:"fetching...",timings:"fetching...",status:"fetching...",remarks:"fetching...",verified_by:"fetching..."}],error:null},e.initClient=function(){window.gapi.client.init({apiKey:m.apiKey,discoveryDocs:m.discoveryDocs}).then((function(){y(e.onLoad)}))},e.onLoad=function(t,r){if(t){var i=JSON.parse(JSON.stringify(t.remi));e.setState({remi:i})}else console.log(r),e.setState({error:r})},e}return Object(f.a)(r,[{key:"componentDidMount",value:function(){window.gapi.load("client",this.initClient)}},{key:"render",value:function(){var e=this.state,t=e.remi;return e.error?Object(O.jsx)("div",{children:this.state.error}):Object(O.jsx)(v.a,{border:!0,background:{header:"accent-1",body:["light","light-3"]},margin:"small",resizeable:!0,sortable:!0,columns:x,data:t})}}]),r}(n.a.Component);function C(e){window.gapi.client.load("sheets","v4",(function(){window.gapi.client.sheets.spreadsheets.values.get({spreadsheetId:m.spreadsheetId,range:"Medical Store!A3:G"}).then((function(t){var r=t.result.values.map((function(e){return{storename:e[0],city:e[1],area:e[2],contact:e[3],areacover:e[4],remarks:e[5],verified_by:e[6]}}))||[];e({remi:r})}),(function(t){e(!1,t.result.error,"Error in fetching Medical Store Data.")}))}))}var z=[{property:"storename",header:Object(O.jsx)(h.a,{children:"Medical Store"}),size:"small"},{property:"city",header:Object(O.jsx)(h.a,{children:"City"}),size:"small"},{property:"area",header:Object(O.jsx)(h.a,{children:"Area"}),size:"small"},{property:"contact",header:Object(O.jsx)(h.a,{children:"Contact"}),size:"small"},{property:"areacover",header:Object(O.jsx)(h.a,{children:"Area Covered"}),size:"small"},{property:"remarks",header:Object(O.jsx)(h.a,{children:"Remarks"}),size:"small"},{property:"verified_by",header:Object(O.jsx)(h.a,{children:"Verified By"}),size:"small"}],S=function(e){Object(b.a)(r,e);var t=Object(g.a)(r);function r(){var e;Object(j.a)(this,r);for(var i=arguments.length,n=new Array(i),a=0;a<i;a++)n[a]=arguments[a];return(e=t.call.apply(t,[this].concat(n))).state={remi:[{storename:"fetching...",city:"fetching...",area:"fetching...",contact:"fetching...",areacover:"fetching...",remarks:"fetching...",verified_by:"fetching..."}],error:null},e.initClient=function(){window.gapi.client.init({apiKey:m.apiKey,discoveryDocs:m.discoveryDocs}).then((function(){C(e.onLoad)}))},e.onLoad=function(t,r){if(t){var i=JSON.parse(JSON.stringify(t.remi));e.setState({remi:i})}else console.log(r),e.setState({error:r})},e}return Object(f.a)(r,[{key:"componentDidMount",value:function(){window.gapi.load("client",this.initClient)}},{key:"render",value:function(){var e=this.state,t=e.remi;return e.error?Object(O.jsx)("div",{children:this.state.error}):Object(O.jsx)(v.a,{border:!0,background:{header:"accent-1",body:["light","light-3"]},margin:"small",resizeable:!0,sortable:!0,columns:z,data:t})}}]),r}(n.a.Component);function k(e){window.gapi.client.load("sheets","v4",(function(){window.gapi.client.sheets.spreadsheets.values.get({spreadsheetId:m.spreadsheetId,range:"Doctor on Call!A3:G"}).then((function(t){var r=t.result.values.map((function(e){return{doctor:e[0],location:e[1],contact:e[2],service:e[3],time:e[4],verified_by:e[6]}}))||[];e({remi:r})}),(function(t){e(!1,t.result.error,"Error in fetching Doctor Data.")}))}))}var D=[{property:"doctor",header:Object(O.jsx)(h.a,{children:"Doctor Name"}),size:"small"},{property:"location",header:Object(O.jsx)(h.a,{children:"Location"}),size:"small"},{property:"contact",header:Object(O.jsx)(h.a,{children:"Contact"}),size:"small"},{property:"service",header:Object(O.jsx)(h.a,{children:"Services"}),size:"small"},{property:"time",header:Object(O.jsx)(h.a,{children:"Time"}),size:"small"},{property:"verified_by",header:Object(O.jsx)(h.a,{children:"Verified By"}),size:"small"}],_=function(e){Object(b.a)(r,e);var t=Object(g.a)(r);function r(){var e;Object(j.a)(this,r);for(var i=arguments.length,n=new Array(i),a=0;a<i;a++)n[a]=arguments[a];return(e=t.call.apply(t,[this].concat(n))).state={remi:[{doctor:"fetching...",location:"fetching...",contact:"fetching...",service:"fetching...",time:"fetching...",verified_by:"fetching..."}],error:null},e.initClient=function(){window.gapi.client.init({apiKey:m.apiKey,discoveryDocs:m.discoveryDocs}).then((function(){k(e.onLoad)}))},e.onLoad=function(t,r){if(t){var i=JSON.parse(JSON.stringify(t.remi));e.setState({remi:i})}else console.log(r),e.setState({error:r})},e}return Object(f.a)(r,[{key:"componentDidMount",value:function(){window.gapi.load("client",this.initClient)}},{key:"render",value:function(){var e=this.state,t=e.remi;return e.error?Object(O.jsx)("div",{children:this.state.error}):Object(O.jsx)(v.a,{border:!0,background:{header:"accent-1",body:["light","light-3"]},margin:"small",resizeable:!0,sortable:!0,columns:D,data:t})}}]),r}(n.a.Component);function I(e){window.gapi.client.load("sheets","v4",(function(){window.gapi.client.sheets.spreadsheets.values.get({spreadsheetId:m.spreadsheetId,range:"Emergency Number!A3:G"}).then((function(t){var r=t.result.values.map((function(e){return{id:e[0],org:e[1],name:e[2],contact:e[3],service:e[4],status:e[5],verified_by:e[6]}}))||[];e({remi:r})}),(function(t){e(!1,t.result.error,"Error in fetching Emergency Contact Data.")}))}))}var N=[{property:"id",header:Object(O.jsx)(h.a,{children:"#"})},{property:"org",header:Object(O.jsx)(h.a,{children:"Organization"}),size:"small"},{property:"name",header:Object(O.jsx)(h.a,{children:"Name"}),size:"small"},{property:"contact",header:Object(O.jsx)(h.a,{children:"Contact"}),size:"small"},{property:"service",header:Object(O.jsx)(h.a,{children:"Service"}),size:"small"},{property:"status",header:Object(O.jsx)(h.a,{children:"Status"}),size:"small"},{property:"verified_by",header:Object(O.jsx)(h.a,{children:"Verified By"}),size:"small"}],A=function(e){Object(b.a)(r,e);var t=Object(g.a)(r);function r(){var e;Object(j.a)(this,r);for(var i=arguments.length,n=new Array(i),a=0;a<i;a++)n[a]=arguments[a];return(e=t.call.apply(t,[this].concat(n))).state={remi:[{id:"fetching...",org:"fetching...",name:"fetching...",contact:"fetching...",service:"fetching...",status:"fetching...",verified_by:"fetching..."}],error:null},e.initClient=function(){window.gapi.client.init({apiKey:m.apiKey,discoveryDocs:m.discoveryDocs}).then((function(){I(e.onLoad)}))},e.onLoad=function(t,r){if(t){var i=JSON.parse(JSON.stringify(t.remi));e.setState({remi:i})}else console.log(r),e.setState({error:r})},e}return Object(f.a)(r,[{key:"componentDidMount",value:function(){window.gapi.load("client",this.initClient)}},{key:"render",value:function(){var e=this.state,t=e.remi;return e.error?Object(O.jsx)("div",{children:this.state.error}):Object(O.jsx)(v.a,{border:!0,background:{header:"accent-1",body:["light","light-3"]},margin:"small",resizeable:!0,sortable:!0,columns:N,data:t})}}]),r}(n.a.Component);function L(e){window.gapi.client.load("sheets","v4",(function(){window.gapi.client.sheets.spreadsheets.values.get({spreadsheetId:m.spreadsheetId,range:"Websites for COVID19!A3:F"}).then((function(t){var r=t.result.values.map((function(e){return{id:e[0],city:e[1],website:e[2],purpose:e[3],details:e[4],verified_by:e[5]}}))||[];e({remi:r})}),(function(t){e(!1,t.result.error,"Error in fetching Websites for COVID 19 Data.")}))}))}var K=r(94),J=[{property:"id",header:Object(O.jsx)(h.a,{children:"#"})},{property:"city",header:Object(O.jsx)(h.a,{children:"City"})},{property:"website",header:Object(O.jsx)(h.a,{children:"Website"}),render:function(e){return Object(O.jsx)(K.a,{href:e.website,label:"Tap Here"})}},{property:"purpose",header:Object(O.jsx)(h.a,{children:"Purpose"})},{property:"details",header:Object(O.jsx)(h.a,{children:"Details"}),size:"small"},{property:"verified_by",header:Object(O.jsx)(h.a,{children:"Verified By"}),size:"small"}],M=function(e){Object(b.a)(r,e);var t=Object(g.a)(r);function r(){var e;Object(j.a)(this,r);for(var i=arguments.length,n=new Array(i),a=0;a<i;a++)n[a]=arguments[a];return(e=t.call.apply(t,[this].concat(n))).state={remi:[{id:"fetching...",city:"fetching...",website:"fetching...",purpose:"fetching...",details:"fetching...",verified_by:"fetching..."}],error:null},e.initClient=function(){window.gapi.client.init({apiKey:m.apiKey,discoveryDocs:m.discoveryDocs}).then((function(){L(e.onLoad)}))},e.onLoad=function(t,r){if(t){var i=JSON.parse(JSON.stringify(t.remi));e.setState({remi:i})}else console.log(r),e.setState({error:r})},e}return Object(f.a)(r,[{key:"componentDidMount",value:function(){window.gapi.load("client",this.initClient)}},{key:"render",value:function(){var e=this.state,t=e.remi;return e.error?Object(O.jsx)("div",{children:this.state.error}):Object(O.jsx)(v.a,{border:!0,background:{header:"accent-1",body:["light","light-3"]},margin:"small",resizeable:!0,sortable:!0,columns:J,data:t})}}]),r}(n.a.Component);function F(e){window.gapi.client.load("sheets","v4",(function(){window.gapi.client.sheets.spreadsheets.values.get({spreadsheetId:m.spreadsheetId,range:"Oxygen!A3:G"}).then((function(t){var r=t.result.values.map((function(e){return{org:e[0],name:e[1],contact:e[2],timings:e[3],status:e[4],remarks:e[5],verified_by:e[6]}}))||[];e({remi:r})}),(function(t){e(!1,t.result.error,"Error in fetching Oxygen Data.")}))}))}var E=[{property:"org",header:Object(O.jsx)(h.a,{children:"Organization"}),size:"small"},{property:"name",header:Object(O.jsx)(h.a,{children:"Name"}),size:"small"},{property:"contact",header:Object(O.jsx)(h.a,{children:"Contact"})},{property:"timings",header:Object(O.jsx)(h.a,{children:"Timings"})},{property:"status",header:Object(O.jsx)(h.a,{children:"Status"}),size:"small"},{property:"remarks",header:Object(O.jsx)(h.a,{children:"Remarks"}),size:"small"},{property:"verified_by",header:Object(O.jsx)(h.a,{children:"Verified By"}),size:"small"}],P=function(e){Object(b.a)(r,e);var t=Object(g.a)(r);function r(){var e;Object(j.a)(this,r);for(var i=arguments.length,n=new Array(i),a=0;a<i;a++)n[a]=arguments[a];return(e=t.call.apply(t,[this].concat(n))).state={remi:[{org:"fetching...",name:"fetching...",contact:"fetching...",timings:"fetching...",status:"fetching...",remarks:"fetching...",verified_by:"fetching..."}],error:null},e.initClient=function(){window.gapi.client.init({apiKey:m.apiKey,discoveryDocs:m.discoveryDocs}).then((function(){F(e.onLoad)}))},e.onLoad=function(t,r){if(t){var i=JSON.parse(JSON.stringify(t.remi));e.setState({remi:i})}else console.log(r),e.setState({error:r})},e}return Object(f.a)(r,[{key:"componentDidMount",value:function(){window.gapi.load("client",this.initClient)}},{key:"render",value:function(){var e=this.state,t=e.remi;return e.error?Object(O.jsx)("div",{children:this.state.error}):Object(O.jsx)(v.a,{border:!0,background:{header:"accent-1",body:["light","light-3"]},margin:"small",resizeable:!0,sortable:!0,columns:E,data:t})}}]),r}(n.a.Component);function B(e){window.gapi.client.load("sheets","v4",(function(){window.gapi.client.sheets.spreadsheets.values.get({spreadsheetId:m.spreadsheetId,range:"Food For Covid Patients!A3:L"}).then((function(t){var r=t.result.values.map((function(e){return{id:e[0],city:e[1],area:e[2],org:e[3],charges:e[4],ld:e[5],person:e[6],contact:e[7],foodfor:e[8],conditions:e[9],verified_by:e[11]}}))||[];e({remi:r})}),(function(t){e(!1,t.result.error,"Error in fetching Food Data.")}))}))}var V=[{property:"id",header:Object(O.jsx)(h.a,{children:"#"})},{property:"city",header:Object(O.jsx)(h.a,{children:"City"})},{property:"area",header:Object(O.jsx)(h.a,{children:"Area Covered"})},{property:"org",header:Object(O.jsx)(h.a,{children:"Organization"})},{property:"charges",header:Object(O.jsx)(h.a,{children:"Charges"})},{property:"ld",header:Object(O.jsx)(h.a,{children:"Lunch/Dinner"})},{property:"person",header:Object(O.jsx)(h.a,{children:"Contact Person"}),size:"small"},{property:"contact",header:Object(O.jsx)(h.a,{children:"Contact Number"})},{property:"foodfor",header:Object(O.jsx)(h.a,{children:"Food For?"}),size:"small"},{property:"conditions",header:Object(O.jsx)(h.a,{children:"Conditions"}),size:"small"},{property:"verified_by",header:Object(O.jsx)(h.a,{children:"Verified By"})}],R=function(e){Object(b.a)(r,e);var t=Object(g.a)(r);function r(){var e;Object(j.a)(this,r);for(var i=arguments.length,n=new Array(i),a=0;a<i;a++)n[a]=arguments[a];return(e=t.call.apply(t,[this].concat(n))).state={remi:[{id:"fetching...",city:"fetching...",area:"fetching...",org:"fetching...",charges:"fetching...",ld:"fetching...",person:"fetching...",contact:"fetching...",foodfor:"fetching...",conditions:"fetching...",verified_by:"fetching..."}],error:null},e.initClient=function(){window.gapi.client.init({apiKey:m.apiKey,discoveryDocs:m.discoveryDocs}).then((function(){B(e.onLoad)}))},e.onLoad=function(t,r){if(t){var i=JSON.parse(JSON.stringify(t.remi));e.setState({remi:i})}else console.log(r),e.setState({error:r})},e}return Object(f.a)(r,[{key:"componentDidMount",value:function(){window.gapi.load("client",this.initClient)}},{key:"render",value:function(){var e=this.state,t=e.remi;return e.error?Object(O.jsx)("div",{children:this.state.error}):Object(O.jsx)(v.a,{border:!0,background:{header:"accent-1",body:["light","light-3"]},margin:"small",resizeable:!0,sortable:!0,columns:V,data:t})}}]),r}(n.a.Component);function G(e){window.gapi.client.load("sheets","v4",(function(){window.gapi.client.sheets.spreadsheets.values.get({spreadsheetId:m.spreadsheetId,range:"Plasma Support!A3:G"}).then((function(t){var r=t.result.values.map((function(e){return{platform:e[0],person:e[1],contact:e[2],remarks:e[3],verified_by:e[5]}}))||[];e({remi:r})}),(function(t){e(!1,t.result.error,"Error in fetching Plasma Support Data.")}))}))}var W=[{property:"platform",header:Object(O.jsx)(h.a,{children:"Platform"}),size:"small"},{property:"person",header:Object(O.jsx)(h.a,{children:"Contact Person"}),size:"small"},{property:"contact",header:Object(O.jsx)(h.a,{children:"Contact"}),size:"small"},{property:"remarks",header:Object(O.jsx)(h.a,{children:"Remarks"}),size:"small"},{property:"verified_by",header:Object(O.jsx)(h.a,{children:"Verified By"}),size:"small"}],T=function(e){Object(b.a)(r,e);var t=Object(g.a)(r);function r(){var e;Object(j.a)(this,r);for(var i=arguments.length,n=new Array(i),a=0;a<i;a++)n[a]=arguments[a];return(e=t.call.apply(t,[this].concat(n))).state={remi:[{platform:"fetching...",person:"fetching...",contact:"fetching...",remarks:"fetching...",verified_by:"fetching..."}],error:null},e.initClient=function(){window.gapi.client.init({apiKey:m.apiKey,discoveryDocs:m.discoveryDocs}).then((function(){G(e.onLoad)}))},e.onLoad=function(t,r){if(t){var i=JSON.parse(JSON.stringify(t.remi));e.setState({remi:i})}else console.log(r),e.setState({error:r})},e}return Object(f.a)(r,[{key:"componentDidMount",value:function(){window.gapi.load("client",this.initClient)}},{key:"render",value:function(){var e=this.state,t=e.remi;return e.error?Object(O.jsx)("div",{children:this.state.error}):Object(O.jsx)(v.a,{border:!0,background:{header:"accent-1",body:["light","light-3"]},margin:"small",resizeable:!0,sortable:!0,columns:W,data:t})}}]),r}(n.a.Component),q={global:{font:{family:"Roboto"}}};var Y=function(){return Object(O.jsx)(s.a,{theme:q,full:!0,children:Object(O.jsx)(o.a.Consumer,{children:function(){return Object(O.jsxs)(l.a,{fill:!0,children:[Object(O.jsx)(d.a,{background:"brand",children:Object(O.jsx)(h.a,{size:"xlarge",margin:"small",children:"Gujarat Covid Support"})}),Object(O.jsx)(l.a,{direction:"row",pad:"medium",children:Object(O.jsxs)(p.a,{children:[Object(O.jsx)(u.a,{title:"Remedesivir",children:Object(O.jsx)(l.a,{pad:"medium",children:Object(O.jsx)(w,{})})}),Object(O.jsx)(u.a,{title:"Medical Store",children:Object(O.jsx)(l.a,{pad:"medium",children:Object(O.jsx)(S,{})})}),Object(O.jsx)(u.a,{title:"Doctor On Call",children:Object(O.jsx)(l.a,{pad:"medium",children:Object(O.jsx)(_,{})})}),Object(O.jsx)(u.a,{title:"Emergency Number",children:Object(O.jsx)(l.a,{pad:"medium",children:Object(O.jsx)(A,{})})}),Object(O.jsx)(u.a,{title:"Websites",children:Object(O.jsx)(l.a,{pad:"medium",children:Object(O.jsx)(M,{})})}),Object(O.jsx)(u.a,{title:"Oxygen",children:Object(O.jsx)(l.a,{pad:"medium",children:Object(O.jsx)(P,{})})}),Object(O.jsx)(u.a,{title:"Food For Patients",children:Object(O.jsx)(l.a,{pad:"medium",children:Object(O.jsx)(R,{})})}),Object(O.jsx)(u.a,{title:"Plasma Support",children:Object(O.jsx)(l.a,{pad:"medium",children:Object(O.jsx)(T,{})})})]})})]})}})})},Z=function(e){e&&e instanceof Function&&r.e(3).then(r.bind(null,97)).then((function(t){var r=t.getCLS,i=t.getFID,n=t.getFCP,a=t.getLCP,c=t.getTTFB;r(e),i(e),n(e),a(e),c(e)}))};c.a.render(Object(O.jsx)(n.a.StrictMode,{children:Object(O.jsx)(Y,{})}),document.getElementById("root")),Z()}},[[69,1,2]]]);
//# sourceMappingURL=main.1789acdb.chunk.js.map