{"version":3,"sources":["config.js","helpers/RemiSheet.js","components/RemiList.js","helpers/MedicalSheet.js","components/MedicalList.js","helpers/DoctorSheet.js","components/DoctorList.js","helpers/EmergencySheet.js","components/EmergencyList.js","helpers/WebsiteSheet.js","components/WebsiteList.js","helpers/OxygenSheet.js","components/OxygenList.js","helpers/FoodSheet.js","components/FoodList.js","helpers/PlasmaSheet.js","components/PlasmaList.js","helpers/RTPCRSheet.js","components/RTPCRList.js","helpers/AmbuSheet.js","components/AmbuList.js","helpers/CCCSheet.js","components/CCCList.js","helpers/SurgicalSheet.js","components/SurgicalList.js","helpers/NursingSheet.js","components/NursingList.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","spreadsheetId","discoveryDocs","load","callback","window","gapi","client","sheets","spreadsheets","values","get","config","range","then","response","remi","result","map","rem","id","city","org","contact","status","remarks","verified_on","moment","fromNow","error","columns","property","header","Text","size","RemiList","state","initClient","init","onLoad","data","JSON","parse","stringify","setState","console","log","this","Box","DataTable","border","background","body","margin","resizeable","sortable","pin","React","Component","area","name","MedicalList","service","time","DoctorList","EmergencyList","website","purpose","details","render","datum","Anchor","href","label","WebsiteList","type","timings","OxygenList","charges","ld","person","foodfor","conditions","FoodList","platform","PlasmaList","home","rtpcr","ctscan","rapid","RTPCRList","AmbuList","address","CCCList","timing","SurgicalList","NursingList","gfc_theme","global","font","family","App","Grommet","theme","full","ResponsiveContext","Consumer","Header","direction","weight","pad","Tabs","Tab","title","Footer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0000dec1.chunk.js","sourcesContent":["export default {\r\n  //prady\r\n  // apiKey: \"AIzaSyCAp-t_WKWx0sfpOM5_-5yeC9g-ZcrkWcI\",\r\n  // spreadsheetId: \"13EFowc_DLa9c9D4OeGK2X7bdQFPtVmfQf1EHpUmBM5w\",\r\n  //live\r\n  apiKey: \"AIzaSyCAp-t_WKWx0sfpOM5_-5yeC9g-ZcrkWcI\",\r\n  spreadsheetId: \"1ZyrYsowjk6PdC9N5yKBxMslI7FypoeIqDvlAYrqprL8\",\r\n  discoveryDocs: [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"]\r\n};","import config from \"../config\";\r\nimport moment from \"moment\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Remedesivir!A5:H\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              org: rem[2],\r\n              contact: rem[3],\r\n              status: rem[4],\r\n              remarks: rem[5],\r\n              verified_on: moment(rem[7], \"DD-MM-YYYY HH:mm:ss\").fromNow(),\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Remedesivir Supplier Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/RemiSheet\";\r\nimport { Box, DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    //size: \"small\",\r\n  },\r\n];\r\n\r\nclass RemiList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        org: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        status: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <Box>\r\n        <Text>\r\n          NOTE 1 - As per Govt of Gujarat guideline, the Remedesivir can now\r\n          only be availed through govt hospitals by private hospitals where\r\n          patient is admitted.\r\n        </Text>\r\n        <br />\r\n        <Text> NOTE 2 - For Ahmedabad : Checklist for getting Remdesivir from SVP Hospital in Ahmedabad.</Text>\r\n        <Text>1) Patient should be admitted on oxygen bed in Hospital with in AMC limit. ✅</Text>\r\n        <Text>2) Doc1 - Hospital should have Valid C Form issued from AMC ✅</Text>\r\n        <Text>3) Doc2 - RTPCR report of Patient should be recent, not older than 15 days. ✅</Text>\r\n        <Text>4) Doc3 - Doctors should fill the format given on last page ✅</Text>\r\n        <Text>5) Doc4 - Hospital staff icard who will come for collection ✅</Text>\r\n        <br />\r\n        <Text>Send 📧 email to remdesivir.tossilamc@gmail.com with above mentioned 4 documents from hospital ID.</Text>\r\n        <Text>If any documents are missing, application can be rejected.</Text>\r\n        <Text>Successful application will get appointment for collecting.</Text>\r\n        <br />\r\n        <DataTable\r\n          border={true}\r\n          background={{\r\n            header: \"accent-1\",\r\n            body: [\"light\", \"light-3\"],\r\n          }}\r\n          margin={\"small\"}\r\n          resizeable={true}\r\n          sortable={true}\r\n          columns={columns}\r\n          data={remi}\r\n          pin=\"header\"\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RemiList;\r\n","import config from \"../config\";\r\nimport moment from \"moment\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Medical Store!A3:H\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              area: rem[2],\r\n              name: rem[3],\r\n              contact: rem[4],\r\n              remarks: rem[5],\r\n              verified_on: moment(rem[7], \"DD-MM-YYYY HH:mm:ss\").fromNow(),\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Medical Store Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/MedicalSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"area\",\r\n    header: <Text>Area</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"name\",\r\n    header: <Text>Name</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass MedicalList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        area: \"fetching...\",\r\n        name: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n        pin=\"header\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedicalList;\r\n","import config from \"../config\";\r\nimport moment from \"moment\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Doctor on Call!A3:H\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              name: rem[2],\r\n              contact: rem[3],\r\n              service: rem[4],\r\n              time: rem[5],\r\n              verified_on: moment(rem[7], \"DD-MM-YYYY HH:mm:ss\").fromNow(),\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Doctor Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/DoctorSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"name\",\r\n    header: <Text>Doctor</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"service\",\r\n    header: <Text>Service</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"time\",\r\n    header: <Text>Time</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass DoctorList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        name: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        service: \"fetching...\",\r\n        time: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: \"accent-1\",\r\n          body: [\"light\", \"light-3\"],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n        pin=\"header\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoctorList;\r\n","import config from \"../config\";\r\nimport moment from \"moment\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Emergency Number!A3:I\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              org: rem[2],\r\n              contact: rem[3],\r\n              service: rem[4],\r\n              status: rem[5],\r\n              remarks: rem[6],\r\n              verified_on: moment(rem[8], \"DD-MM-YYYY HH:mm:ss\").fromNow(),\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Emergency Contact Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/EmergencySheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"service\",\r\n    header: <Text>Service</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass EmergencyList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        org: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        service: \"fetching...\",\r\n        status: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n        pin=\"header\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmergencyList;\r\n","import config from \"../config\";\r\nimport moment from \"moment\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Websites for COVID19!A3:G\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              website: rem[2],\r\n              purpose: rem[3],\r\n              details: rem[4],\r\n              verified_on: moment(rem[6], \"DD-MM-YYYY HH:mm:ss\").fromNow(),\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Websites for COVID 19 Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/WebsiteSheet\";\r\nimport { DataTable, Anchor, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"website\",\r\n    header: <Text>Website</Text>,\r\n    render: datum => (\r\n      <Anchor href={datum.website} label=\"Tap Here\" />\r\n    ),\r\n  },\r\n  {\r\n    property: \"purpose\",\r\n    header: <Text>Purpose</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"details\",\r\n    header: <Text>Details</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass WebsiteList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        website: \"fetching...\",\r\n        purpose: \"fetching...\",\r\n        details: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n        pin=\"header\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default WebsiteList;\r\n","import config from \"../config\";\r\nimport moment from \"moment\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Oxygen Sources!A3:K\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              org: rem[2],\r\n              name: rem[3],\r\n              contact: rem[4],\r\n              type: rem[5],\r\n              timings: rem[6],\r\n              status: rem[7],\r\n              remarks: rem[8],\r\n              verified_on: moment(rem[10], \"DD-MM-YYYY HH:mm:ss\").fromNow(),\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Oxygen Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/OxygenSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"name\",\r\n    header: <Text>Name</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"type\",\r\n    header: <Text>Type</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"timings\",\r\n    header: <Text>Timings</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    //size: \"small\",\r\n  },\r\n];\r\n\r\nclass OxygenList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        org: \"fetching...\",\r\n        name: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        type: \"fetching...\",\r\n        timings: \"fetching...\",\r\n        status: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n        pin=\"header\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default OxygenList;\r\n","import config from \"../config\";\r\nimport moment from \"moment\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Food For Covid Patients!A3:L\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              area: rem[2],\r\n              org: rem[3],\r\n              charges: rem[4],\r\n              ld: rem[5],\r\n              person: rem[6],\r\n              contact: rem[7],\r\n              foodfor: rem[8],\r\n              conditions: rem[9],\r\n              verified_on: moment(rem[11], \"DD-MM-YYYY HH:mm:ss\").fromNow(),\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Food Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/FoodSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"area\",\r\n    header: <Text>Area Covered</Text>,\r\n    //size: \"large\",\r\n  },\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"charges\",\r\n    header: <Text>Charges</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"ld\",\r\n    header: <Text>Lunch/Dinner</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"person\",\r\n    header: <Text>Contact Person</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact Number</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"foodfor\",\r\n    header: <Text>Food For?</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"conditions\",\r\n    header: <Text>Conditions</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    //size: \"small\",\r\n  },\r\n];\r\n\r\nclass FoodList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        area: \"fetching...\",\r\n        org: \"fetching...\",\r\n        charges: \"fetching...\",\r\n        ld: \"fetching...\",\r\n        person: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        foodfor: \"fetching...\",\r\n        conditions: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n        pin=\"header\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FoodList;\r\n","import config from \"../config\";\r\nimport moment from \"moment\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Plasma Support!A3:H\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              platform: rem[2],\r\n              person: rem[3],\r\n              contact: rem[4],\r\n              remarks: rem[5],\r\n              verified_on: moment(rem[7], \"DD-MM-YYYY HH:mm:ss\").fromNow(),\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Plasma Support Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/PlasmaSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"platform\",\r\n    header: <Text>Platform</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"person\",\r\n    header: <Text>Contact Person</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass PlasmaList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        platform: \"fetching...\",\r\n        person: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n        pin=\"header\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlasmaList;\r\n","import config from \"../config\";\r\nimport moment from \"moment\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"COVID19 Reports!A3:N\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              org: rem[2],\r\n              person: rem[3],\r\n              contact: rem[4],\r\n              time: rem[5],\r\n              status: rem[6],\r\n              remarks: rem[7],\r\n              verified_on: moment(rem[9], \"DD-MM-YYYY HH:mm:ss\").fromNow(),\r\n              home: rem[10],\r\n              rtpcr: rem[11],\r\n              ctscan: rem[12],\r\n              rapid: rem[13],\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching RT-PCR Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/RTPCRSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"person\",\r\n    header: <Text>Person</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"time\",\r\n    header: <Text>Time</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"home\",\r\n    header: <Text>Home Collection</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"rtpcr\",\r\n    header: <Text>RT-PCR</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"ctscan\",\r\n    header: <Text>CT Scan</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"rapid\",\r\n    header: <Text>Rapid Antigen</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    //size: \"small\",\r\n  },\r\n];\r\n\r\nclass RTPCRList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        org: \"fetching...\",\r\n        person: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        time: \"fetching...\",\r\n        status: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n        home: \"fetching...\",\r\n        rtpcr: \"fetching...\",\r\n        ctscan: \"fetching...\",\r\n        rapid: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: \"accent-1\",\r\n          body: [\"light\", \"light-3\"],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n        pin=\"header\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default RTPCRList;\r\n","import config from \"../config\";\r\nimport moment from \"moment\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Ambulance!A3:J\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              org: rem[2],\r\n              person: rem[3],\r\n              contact: rem[4],\r\n              time: rem[5],\r\n              status: rem[6],\r\n              remarks: rem[7],\r\n              verified_on: moment(rem[9], \"DD-MM-YYYY HH:mm:ss\").fromNow(),\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Ambulance Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/AmbuSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"person\",\r\n    header: <Text>Person</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"time\",\r\n    header: <Text>Time</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    //size: \"small\",\r\n  },\r\n];\r\n\r\nclass AmbuList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        org: \"fetching...\",\r\n        person: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        time: \"fetching...\",\r\n        status: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: \"accent-1\",\r\n          body: [\"light\", \"light-3\"],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n        pin=\"header\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default AmbuList;\r\n","import config from \"../config\";\r\nimport moment from \"moment\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Covid Care Center!A3:J\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              org: rem[2],\r\n              address: rem[3],\r\n              person: rem[4],\r\n              contact: rem[5],\r\n              remarks: rem[6],\r\n              status: rem[7],\r\n              verified_on: moment(rem[9], \"DD-MM-YYYY HH:mm:ss\").fromNow(),\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Covid Care Center Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/CCCSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"address\",\r\n    header: <Text>Address</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"person\",\r\n    header: <Text>Person</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    //size: \"small\",\r\n  },\r\n];\r\n\r\nclass CCCList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        org: \"fetching...\",\r\n        address: \"fetching...\",\r\n        person: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        status: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: \"accent-1\",\r\n          body: [\"light\", \"light-3\"],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n        pin=\"header\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CCCList;\r\n","import config from \"../config\";\r\nimport moment from \"moment\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Surgical Equipments!A3:K\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              org: rem[2],\r\n              name: rem[3],\r\n              contact: rem[4],\r\n              type: rem[5],\r\n              timing: rem[6],\r\n              status: rem[7],\r\n              remarks: rem[8],\r\n              verified_on: moment(rem[10], \"DD-MM-YYYY HH:mm:ss\").fromNow(),\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Surgical Equipments Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/SurgicalSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"name\",\r\n    header: <Text>Name</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"type\",\r\n    header: <Text>Type</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"timing\",\r\n    header: <Text>Timings</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    //size: \"small\",\r\n  },\r\n];\r\n\r\nclass SurgicalList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        org: \"fetching...\",\r\n        name: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        type: \"fetching...\",\r\n        timing: \"fetching...\",\r\n        status: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: \"accent-1\",\r\n          body: [\"light\", \"light-3\"],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n        pin=\"header\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SurgicalList;\r\n","import config from \"../config\";\r\nimport moment from \"moment\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Nursing Staff!A3:I\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              org: rem[2],\r\n              name: rem[3],\r\n              contact: rem[4],\r\n              status: rem[5],\r\n              remarks: rem[6],\r\n              verified_on: moment(rem[8], \"DD-MM-YYYY HH:mm:ss\").fromNow(),\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Nursing Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/NursingSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"name\",\r\n    header: <Text>Address</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    //size: \"small\",\r\n  },\r\n];\r\n\r\nclass NursingList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        org: \"fetching...\",\r\n        name: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        status: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: \"accent-1\",\r\n          body: [\"light\", \"light-3\"],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n        pin=\"header\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default NursingList;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Grommet,\r\n  ResponsiveContext,\r\n  Tab,\r\n  Tabs,\r\n  Header,\r\n  Text,\r\n  Anchor,\r\n  Footer,\r\n} from \"grommet\";\r\nimport RemiList from \"./components/RemiList\";\r\nimport MedicalList from \"./components/MedicalList\";\r\nimport DoctorList from \"./components/DoctorList\";\r\nimport EmergencyList from \"./components/EmergencyList\";\r\nimport WebsiteList from \"./components/WebsiteList\";\r\nimport OxygenList from \"./components/OxygenList\";\r\nimport FoodList from \"./components/FoodList\";\r\nimport PlasmaList from \"./components/PlasmaList\";\r\nimport RTPCRList from \"./components/RTPCRList\";\r\nimport AmbList from \"./components/AmbuList\";\r\nimport CCCList from \"./components/CCCList\";\r\nimport SurgicalList from \"./components/SurgicalList\";\r\nimport NursingList from \"./components/NursingList\";\r\n//import TociliList from \"./components/TociliList\";\r\n\r\nconst gfc_theme = {\r\n  global: {\r\n    font: {\r\n      family: \"Roboto\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <Grommet theme={gfc_theme} full>\r\n      <ResponsiveContext.Consumer>\r\n        {() => (\r\n          <Box>\r\n            <Header background=\"brand\" direction=\"row-responsive\">\r\n              <Text size=\"xlarge\" margin=\"small\">\r\n                #GujaratCovidSupport\r\n              </Text>\r\n              <Anchor\r\n                margin=\"small\"\r\n                weight=\"normal\"\r\n                href=\"https://forms.gle/YXv43foVgYFHsD17A\"\r\n                label=\"Have a feedback or want to volunteer?\"\r\n              />\r\n            </Header>\r\n            <Box direction=\"row\" pad=\"medium\">\r\n              <Tabs>\r\n                <Tab title=\"Remedesivir\">\r\n                  <Box pad=\"medium\">\r\n                    <RemiList />\r\n                  </Box>\r\n                </Tab>\r\n                <Tab title=\"Plasma Support\">\r\n                  <Box pad=\"medium\">\r\n                    <PlasmaList />\r\n                  </Box>\r\n                </Tab>\r\n                <Tab title=\"COVID19 Reports\">\r\n                  <Box pad=\"medium\">\r\n                    <RTPCRList />\r\n                  </Box>\r\n                </Tab>\r\n                <Tab title=\"Ambulance\">\r\n                  <Box pad=\"medium\">\r\n                    <AmbList />\r\n                  </Box>\r\n                </Tab>\r\n                <Tab title=\"Oxygen Sources\">\r\n                  <Box pad=\"medium\">\r\n                    <OxygenList />\r\n                  </Box>\r\n                </Tab>\r\n                <Tab title=\"Surgical Equipments\">\r\n                  <Box pad=\"medium\">\r\n                    <SurgicalList />\r\n                  </Box>\r\n                </Tab>\r\n                <Tab title=\"Covid Care Center\">\r\n                  <Box pad=\"medium\">\r\n                    <CCCList />\r\n                  </Box>\r\n                </Tab>\r\n                <Tab title=\"Doctor On Call\">\r\n                  <Box pad=\"medium\">\r\n                    <DoctorList />\r\n                  </Box>\r\n                </Tab>\r\n                <Tab title=\"Nursing Staff\">\r\n                  <Box pad=\"medium\">\r\n                    <NursingList />\r\n                  </Box>\r\n                </Tab>\r\n                <Tab title=\"Emergency Number\">\r\n                  <Box pad=\"medium\">\r\n                    <EmergencyList />\r\n                  </Box>\r\n                </Tab>\r\n                <Tab title=\"Medical Store\">\r\n                  <Box pad=\"medium\">\r\n                    <MedicalList />\r\n                  </Box>\r\n                </Tab>\r\n                <Tab title=\"Websites\">\r\n                  <Box pad=\"medium\">\r\n                    <WebsiteList />\r\n                  </Box>\r\n                </Tab>\r\n                <Tab title=\"Food For Patients\">\r\n                  <Box pad=\"medium\">\r\n                    <FoodList />\r\n                  </Box>\r\n                </Tab>\r\n                {/* <Tab title=\"Tocilizumab\">\r\n                  <Box pad=\"medium\"><TociliList /></Box>\r\n                </Tab>                 */}\r\n              </Tabs>\r\n            </Box>\r\n            <Footer background=\"brand\" pad=\"medium\" direction=\"column\">\r\n              <Text>\r\n                Disclaimer: This is volunteer run effort. Portal shares list of\r\n                verified contacts for different COVID-19 help and services.\r\n                Although team verifies each contact while adding it to the\r\n                portal, it may be very much possible that help resource is out\r\n                of supply. We suggest users to refer 'Verified On' column in\r\n                every tab to judge freshness of data.\r\n              </Text>\r\n              <Anchor\r\n                weight=\"normal\"\r\n                href=\"https://forms.gle/YXv43foVgYFHsD17A\"\r\n                label=\"Should you have any feedback or query, please contact us here.\"\r\n              />\r\n            </Footer>\r\n          </Box>\r\n        )}\r\n      </ResponsiveContext.Consumer>\r\n    </Grommet>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}