{"version":3,"sources":["config.js","helpers/RemiSheet.js","components/RemiList.js","helpers/MedicalSheet.js","components/MedicalList.js","helpers/DoctorSheet.js","components/DoctorList.js","helpers/EmergencySheet.js","components/EmergencyList.js","helpers/WebsiteSheet.js","components/WebsiteList.js","helpers/OxygenSheet.js","components/OxygenList.js","helpers/FoodSheet.js","components/FoodList.js","helpers/PlasmaSheet.js","components/PlasmaSheet.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","spreadsheetId","discoveryDocs","load","callback","window","gapi","client","sheets","spreadsheets","values","get","config","range","then","response","remi","result","map","rem","id","city","org","contact","status","remarks","verified_on","error","columns","property","header","Text","size","RemiList","state","initClient","init","onLoad","data","JSON","parse","stringify","setState","console","log","this","Box","DataTable","border","background","body","margin","resizeable","sortable","React","Component","storename","area","areacover","verified_by","MedicalList","doctor","location","service","time","DoctorList","name","EmergencyList","website","purpose","details","render","datum","Anchor","href","label","WebsiteList","timings","OxygenList","charges","ld","person","foodfor","conditions","FoodList","platform","PlasmaList","gfc_theme","global","font","family","App","Grommet","theme","full","ResponsiveContext","Consumer","fill","Header","direction","pad","Tabs","Tab","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf8ebec0.chunk.js","sourcesContent":["export default {\r\n  //prady\r\n  // apiKey: \"AIzaSyCAp-t_WKWx0sfpOM5_-5yeC9g-ZcrkWcI\",\r\n  // spreadsheetId: \"13EFowc_DLa9c9D4OeGK2X7bdQFPtVmfQf1EHpUmBM5w\",\r\n  //live\r\n  apiKey: \"AIzaSyCAp-t_WKWx0sfpOM5_-5yeC9g-ZcrkWcI\",\r\n  spreadsheetId: \"1ZyrYsowjk6PdC9N5yKBxMslI7FypoeIqDvlAYrqprL8\",\r\n  discoveryDocs: [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"]\r\n};","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Remedesivir!A5:H\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              org: rem[2],\r\n              contact: rem[3],\r\n              status: rem[4],\r\n              remarks: rem[5],\r\n              verified_on: rem[7]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Remedesivir Supplier Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/RemiSheet\";\r\nimport { Box, DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_on\",\r\n    header: <Text>Verified On</Text>,\r\n    //size: \"small\",\r\n  },\r\n];\r\n\r\nclass RemiList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        org: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        status: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_on: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <Box>\r\n        <Text>\r\n          NOTE 1 - As per Govt of Gujarat guideline, the Remedesivir can now\r\n          only be availed through govt hospitals by private hospitals where\r\n          patient is admitted.\r\n        </Text>\r\n        <br />\r\n        <Text>\r\n          NOTE 2 - For Ahmedabad, Remdesivir is directly delivered by the\r\n          Government of Gujarat.\r\n        </Text>\r\n        <Text>\r\n          --- For Patients at home: Email SVP hospital with details and scanned\r\n          prescription from pulmonologist at svpimsr@gmail.com. If consulting\r\n          physician is prescribing then email from doctor's id is mandatory.\r\n        </Text>\r\n        <Text>\r\n          --- For Patients in private hospital: The hospital authority need to send\r\n          request to VS hospital and Civil for procurement of injection.\r\n        </Text>\r\n        <br />\r\n        <DataTable\r\n          border={true}\r\n          background={{\r\n            header: \"accent-1\",\r\n            body: [\"light\", \"light-3\"],\r\n          }}\r\n          margin={\"small\"}\r\n          resizeable={true}\r\n          sortable={true}\r\n          columns={columns}\r\n          data={remi}\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RemiList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Medical Store!A3:G\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              storename: rem[0],\r\n              city: rem[1],\r\n              area: rem[2],\r\n              contact: rem[3],\r\n              areacover: rem[4],\r\n              remarks: rem[5],\r\n              verified_by: rem[6]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Medical Store Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/MedicalSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"storename\",\r\n    header: <Text>Medical Store</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"area\",\r\n    header: <Text>Area</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"areacover\",\r\n    header: <Text>Area Covered</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass MedicalList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        storename: \"fetching...\",\r\n        city: \"fetching...\",\r\n        area: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        areacover: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedicalList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Doctor on Call!A3:G\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              doctor: rem[0],\r\n              location: rem[1],\r\n              contact: rem[2],\r\n              service: rem[3],\r\n              time: rem[4],\r\n              verified_by: rem[6]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Doctor Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/DoctorSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"doctor\",\r\n    header: <Text>Doctor Name</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"location\",\r\n    header: <Text>Location</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"service\",\r\n    header: <Text>Services</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"time\",\r\n    header: <Text>Time</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass DoctorList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        doctor: \"fetching...\",\r\n        location: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        service: \"fetching...\",\r\n        time: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: \"accent-1\",\r\n          body: [\"light\", \"light-3\"],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoctorList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Emergency Number!A3:G\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              org: rem[1],\r\n              name: rem[2],\r\n              contact: rem[3],\r\n              service: rem[4],\r\n              status: rem[5],\r\n              verified_by: rem[6]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Emergency Contact Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/EmergencySheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"name\",\r\n    header: <Text>Name</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"service\",\r\n    header: <Text>Service</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass EmergencyList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        org: \"fetching...\",\r\n        name: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        service: \"fetching...\",\r\n        status: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmergencyList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Websites for COVID19!A3:F\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              website: rem[2],\r\n              purpose: rem[3],\r\n              details: rem[4],\r\n              verified_by: rem[5]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Websites for COVID 19 Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/WebsiteSheet\";\r\nimport { DataTable, Anchor, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"website\",\r\n    header: <Text>Website</Text>,\r\n    render: datum => (\r\n      <Anchor href={datum.website} label=\"Tap Here\" />\r\n    ),\r\n  },\r\n  {\r\n    property: \"purpose\",\r\n    header: <Text>Purpose</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"details\",\r\n    header: <Text>Details</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass WebsiteList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        website: \"fetching...\",\r\n        purpose: \"fetching...\",\r\n        details: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default WebsiteList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Oxygen!A3:G\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              org: rem[0],\r\n              name: rem[1],\r\n              contact: rem[2],\r\n              timings: rem[3],\r\n              status: rem[4],\r\n              remarks: rem[5],\r\n              verified_by: rem[6]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Oxygen Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/OxygenSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"name\",\r\n    header: <Text>Name</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"timings\",\r\n    header: <Text>Timings</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"status\",\r\n    header: <Text>Status</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass OxygenList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        org: \"fetching...\",\r\n        name: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        timings: \"fetching...\",\r\n        status: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default OxygenList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Food For Covid Patients!A3:L\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              id: rem[0],\r\n              city: rem[1],\r\n              area: rem[2],\r\n              org: rem[3],\r\n              charges: rem[4],\r\n              ld: rem[5],\r\n              person: rem[6],\r\n              contact: rem[7],\r\n              foodfor: rem[8],\r\n              conditions: rem[9],\r\n              verified_by: rem[11]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Food Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/FoodSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"id\",\r\n    header: <Text>#</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"city\",\r\n    header: <Text>City</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"area\",\r\n    header: <Text>Area Covered</Text>,\r\n    //size: \"large\",\r\n  },\r\n  {\r\n    property: \"org\",\r\n    header: <Text>Organization</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"charges\",\r\n    header: <Text>Charges</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"ld\",\r\n    header: <Text>Lunch/Dinner</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"person\",\r\n    header: <Text>Contact Person</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact Number</Text>,\r\n    //size: \"small\",\r\n  },\r\n  {\r\n    property: \"foodfor\",\r\n    header: <Text>Food For?</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"conditions\",\r\n    header: <Text>Conditions</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    //size: \"small\",\r\n  },\r\n];\r\n\r\nclass FoodList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        id: \"fetching...\",\r\n        city: \"fetching...\",\r\n        area: \"fetching...\",\r\n        org: \"fetching...\",\r\n        charges: \"fetching...\",\r\n        ld: \"fetching...\",\r\n        person: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        foodfor: \"fetching...\",\r\n        conditions: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      console.log(\"in error\");\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    console.log(\"in else\");\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FoodList;\r\n","import config from \"../config\";\r\n\r\nexport function load(callback) {\r\n  window.gapi.client.load(\"sheets\", \"v4\", () => {\r\n    window.gapi.client.sheets.spreadsheets.values\r\n      .get({\r\n        spreadsheetId: config.spreadsheetId,\r\n        range: \"Plasma Support!A3:G\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          const data = response.result.values;\r\n\r\n          const remi =\r\n            data.map((rem) => ({\r\n              platform: rem[0],\r\n              person: rem[1],\r\n              contact: rem[2],\r\n              remarks: rem[3],\r\n              verified_by: rem[5]\r\n            })) || [];            \r\n\r\n          callback({\r\n            remi,\r\n          });\r\n        },\r\n        (response) => {\r\n          callback(false, response.result.error, \"Error in fetching Plasma Support Data.\");\r\n        }\r\n      );\r\n  });\r\n}","import React from \"react\";\r\nimport config from \"../config\";\r\nimport { load } from \"../helpers/PlasmaSheet\";\r\nimport { DataTable, Text } from \"grommet\";\r\n\r\nconst columns = [\r\n  {\r\n    property: \"platform\",\r\n    header: <Text>Platform</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"person\",\r\n    header: <Text>Contact Person</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"contact\",\r\n    header: <Text>Contact</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"remarks\",\r\n    header: <Text>Remarks</Text>,\r\n    size: \"small\",\r\n  },\r\n  {\r\n    property: \"verified_by\",\r\n    header: <Text>Verified By</Text>,\r\n    size: \"small\",\r\n  },\r\n];\r\n\r\nclass PlasmaList extends React.Component {\r\n  state = {\r\n    remi: [\r\n      {\r\n        platform: \"fetching...\",\r\n        person: \"fetching...\",\r\n        contact: \"fetching...\",\r\n        remarks: \"fetching...\",\r\n        verified_by: \"fetching...\",\r\n      },\r\n    ],\r\n    error: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client\", this.initClient);\r\n  }\r\n\r\n  initClient = () => {\r\n    window.gapi.client\r\n      .init({\r\n        apiKey: config.apiKey,\r\n        discoveryDocs: config.discoveryDocs,\r\n      })\r\n      .then(() => {\r\n        load(this.onLoad);\r\n      });\r\n  };\r\n\r\n  onLoad = (data, error) => {\r\n    if (data) {\r\n      const remi = JSON.parse(JSON.stringify(data.remi));\r\n      //console.log(remi);\r\n      this.setState({ remi });\r\n    } else {\r\n      console.log(error);\r\n      this.setState({ error });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { remi, error } = this.state;\r\n    //console.log(remi);\r\n    if (error) {\r\n      return <div>{this.state.error}</div>;\r\n    }\r\n    return (\r\n      <DataTable\r\n        border={true}\r\n        background={{\r\n          header: 'accent-1',\r\n          body: ['light', 'light-3'],\r\n        }}\r\n        margin={\"small\"}\r\n        resizeable={true}\r\n        sortable={true}\r\n        columns={columns}\r\n        data={remi}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlasmaList;\r\n","import React from \"react\";\nimport {\n  Box,\n  Grommet,\n  ResponsiveContext,\n  Tab,\n  Tabs,\n  Header,\n  Text,\n} from \"grommet\";\nimport RemiList from \"./components/RemiList\";\nimport MedicalList from \"./components/MedicalList\";\nimport DoctorList from \"./components/DoctorList\";\nimport EmergencyList from \"./components/EmergencyList\";\nimport WebsiteList from \"./components/WebsiteList\";\nimport OxygenList from \"./components/OxygenList\";\nimport FoodList from \"./components/FoodList\";\nimport PlasmaList from \"./components/PlasmaSheet\";\n//import TociliList from \"./components/TociliList\";\n\nconst gfc_theme = {\n  global: {\n    font: {\n      family: \"Roboto\",\n    },\n  },\n};\n\nfunction App() {\n  return (\n    <Grommet theme={gfc_theme} full>\n      <ResponsiveContext.Consumer>\n        {() => (\n          <Box fill>\n            <Header background=\"brand\">\n              <Text size=\"xlarge\" margin=\"small\">#GujaratCovidSupport</Text>\n            </Header>\n            <Box direction=\"row\" pad=\"medium\">\n              <Tabs>\n                <Tab title=\"Remedesivir\">\n                  <Box pad=\"medium\">\n                    <RemiList />\n                  </Box>\n                </Tab>\n                <Tab title=\"Medical Store\">\n                  <Box pad=\"medium\">\n                    <MedicalList />\n                  </Box>\n                </Tab>\n                <Tab title=\"Doctor On Call\">\n                  <Box pad=\"medium\">\n                    <DoctorList />\n                  </Box>\n                </Tab>\n                <Tab title=\"Emergency Number\">\n                  <Box pad=\"medium\">\n                    <EmergencyList />\n                  </Box>\n                </Tab>\n                <Tab title=\"Websites\">\n                  <Box pad=\"medium\">\n                    <WebsiteList />\n                  </Box>\n                </Tab>\n                <Tab title=\"Oxygen\">\n                  <Box pad=\"medium\">\n                    <OxygenList />\n                  </Box>\n                </Tab>\n                <Tab title=\"Food For Patients\">\n                  <Box pad=\"medium\">\n                    <FoodList />\n                  </Box>\n                </Tab>\n                <Tab title=\"Plasma Support\">\n                  <Box pad=\"medium\">\n                    <PlasmaList />\n                  </Box>\n                </Tab>\n                {/* <Tab title=\"Tocilizumab\">\n                  <Box pad=\"medium\"><TociliList /></Box>\n                </Tab>                 */}\n              </Tabs>\n            </Box>\n          </Box>\n        )}\n      </ResponsiveContext.Consumer>\n    </Grommet>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}